---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jenkins
  namespace: ci-cd-system
spec:
  interval: 1m
  chart:
    spec:
      chart: jenkins
      version: 4.8.2
      sourceRef:
        kind: HelmRepository
        name: jenkins
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: local-path-provisioner
      namespace: kube-system
  values:
    controller:
      # Used for label app.kubernetes.io/component
      componentName: "jenkins-controller"
      image: "jenkins/jenkins"
      servicePort: 8080
      targetPort: 8080
      admin:
        existingSecret:
          - name: jenkins-admin-secret
            key: username
          - name: jenkins-admin-secret
            key: password

      # This values should not be changed unless you use your custom image of jenkins or any devired from. If you want to use
      # Cloudbees Jenkins Distribution docker, you should set jenkinsHome: "/var/cloudbees-jenkins-distribution"
      jenkinsHome: "/var/jenkins_home"

      resources:
        requests:
          cpu: "50m"
          memory: "256Mi"
        limits:
          cpu: "2000m"
          memory: "4096Mi"

      # Name of default cloud configuration.
      cloudName: "home-kubernetes"

      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          hajimari.io/icon: simple-icons:grafana
        hosts:
          - &host "jenkins.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - *host

    agent:
      enabled: true
      resources:
        requests:
          cpu: "512m"
          memory: "512Mi"
          # ephemeralStorage:
        limits:
          cpu: "512m"
          memory: "512Mi"
          # ephemeralStorage:

    persistence:
      enabled: true
      storageClass: local-path
      accessMode: "ReadWriteOnce"
      size: "10Gi"

    networkPolicy:
      # Enable creation of NetworkPolicy resources.
      enabled: false
      # For Kubernetes v1.4, v1.5 and v1.6, use 'extensions/v1beta1'
      # For Kubernetes v1.7, use 'networking.k8s.io/v1'
      apiVersion: networking.k8s.io/v1
      # You can allow agents to connect from both within the cluster (from within specific/all namespaces) AND/OR from a given external IP range
      internalAgents:
        allowed: true
        podLabels: { }
        namespaceLabels: { }
        # project: myproject
      externalAgents: { }
      #   ipCIDR: 172.17.0.0/16
      #   except:
      #     - 172.17.1.0/24

    ## Install Default RBAC roles and bindings
    rbac:
      create: true
      readSecrets: false

